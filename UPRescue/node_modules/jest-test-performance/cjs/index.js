'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var jestMatcherUtils = require('jest-matcher-utils');
var getPerformance = _interopDefault(require('test-performance'));

var predicate = (async (func, time) => {
  const result = await getPerformance(func);
  return [result < time, result];
});

const passMessage = (func, target, result) => () => `
  ${jestMatcherUtils.matcherHint('.not.toBeFasterThan', 'received', '')}
  Function '${func}' ran faster than expected:
  ${jestMatcherUtils.printDiffOrStringify(target, result, 'Expected', 'Received', true)}
`;

const failMessage = (func, target, result) => () => `
  ${jestMatcherUtils.matcherHint('.toBeFasterThan', 'received', '')}
  Function '${func}' ran slower than expected:
  ${jestMatcherUtils.printDiffOrStringify(target, result, 'Expected', 'Received', true)}
`;

var matcher = {
  toBeFasterThan: async (func, target) => {
    const [pass, result] = await predicate(func, target);

    if (pass) {
      return {
        pass: true,
        message: passMessage(func, target, result)
      };
    }

    return {
      pass: false,
      message: failMessage(func, target, result)
    };
  }
};

const jestExpect = global.expect;

if (jestExpect !== undefined) {
  jestExpect.extend(matcher);
} else {
  /* eslint-disable no-console */
  console.error(`
    Unable to find Jest's global expect.
    Please check you have added jest-extended correctly to your jest configuration.
    See https://github.com/jest-community/jest-extended#setup for help.
  `);
  /* eslint-enable no-console */
}
